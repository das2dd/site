<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="description" content="">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <meta charset="utf-8">
        <link rel="stylesheet" type="text/css" href="style.css"></link>
	    <title>Коко-джамбо</title>
    </head>
    <body>
        <nav class="four">
            <ul class="topmenu">
                <li>
                    <a href="index.html">Главная</a>
                    <ul class="submenu">
                        <li><a href="example1.htm" target="_blank">Прим. 1</a></li>
                        <li><a href="example2.htm" target="_blank">Прим. 2</a></li>
                        <li><a href="example3.htm" target="_blank">Другое</a></li>
                    </ul>
                </li>
                <li><a href="graphs.html">Графики</a>
                <li>
                    <a href="links.html">Ссылки</a>
                    <ul class="submenu">
                        <li><a href="https://scikit-learn.org/stable/index.html" target="_blank">Scikit</a></li>
                        <li><a href="https://pandas.pydata.org/" target="_blank">Pandas</a></li>
                        <li><a href="https://numpy.org/" target="_blank">NumPy</a></li>
                        <li><a href="https://seaborn.pydata.org/" target="_blank">SeaBorn</a></li>
                        <li><a href="https://matplotlib.org/" target="_blank">MatPlot Lib</a></li>
                        <li><a href="https://habr.com/ru/company/ruvds/blog/494720/" target="_blank">Шпар с Habr</a></li>
                    </ul>
                </li>
            </ul>
        </nav>
        
        <div class="code">
            
        </div>

        <div class="code">
            data = na_zero[na_zero['target'] == 1]<br>
            data = data.append(na_zero[na_zero['target'] == 0][:2297])<br>
            x = data.drop(["target"],axis=1)<br>
            y = data['target']<br>
            from sklearn.model_selection import train_test_split<br>
            x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)<br>
        </div>

        <div class="code">
            from sklearn.tree import DecisionTreeClassifier<br>
            model = DecisionTreeClassifier()<br>
            model.fit(x_train, y_train)<br>
            model.score(x_test, y_test)<br>
        </div>

        <div class="code">
            models = ['ensemble.BaggingClassifier', 'ensemble.ExtraTreesClassifier', 'ensemble.GradientBoostingClassifier', 'ensemble.RandomForestClassifier', 'ensemble.VotingClassifier', 'ensemble.HistGradientBoostingClassifier', 'gaussian_process.GaussianProcessClassifier', 'linear_model.PassiveAggressiveClassifier', 'linear_model.RidgeClassifier', 'linear_model.RidgeClassifierCV', 'linear_model.SGDClassifier', 'multiclass.OneVsRestClassifier', 'multiclass.OneVsOneClassifier', 'multiclass.OutputCodeClassifier', 'multioutput.ClassifierChain', 'multioutput.MultiOutputClassifier', 'neighbors.KNeighborsClassifier', 'neighbors.RadiusNeighborsClassifier', 'neural_network.MLPClassifier', 'semi_supervised.SelfTrainingClassifier', 'tree.DecisionTreeClassifier', 'tree.ExtraTreeClassifier']<br>
            for name in models:<br>
            split = name.split('.')<br>
            package = "sklearn."+split[0]<br>
            name = split[1]<br>
            model = getattr(__import__(package, fromlist=[name]), name)<br>
            try:<br>
            &nbsp;&nbsp;&nbsp;&nbsp;model = model()<br>
            &nbsp;&nbsp;&nbsp;&nbsp;model.fit(X=x_train,y=y_train)<br>
            &nbsp;&nbsp;&nbsp;&nbsp;print(name,' ',model.score(x_test,y_test))<br>
            except:<br>
            &nbsp;&nbsp;&nbsp;&nbsp;pass<br>
        </div>

        <div class="code">
            
        </div>

        <div class="code">
            
        </div>
    </body>
</html>